#!/usr/bin/env sh

. x-utils

log "System update"

update_distro() {
  log "Distro update"
  if [[ $(command -v eopkg) ]]; then # Solus
    #https://linuxiac.com/solus-linux-eopkg-package-manager-guide/
    output=$(sudo eopkg upgrade -n)
    string="No packages to upgrade"
    # if [[ "$output" =~ "No packages to upgrade" ]]
    if [[ $(sudo eopkg upgrade -n) =~ "No packages to upgrade" ]]
    then
      log "No distro updates available."
    else
      sudo eopkg upgrade
      sudo eopkg delete-cache
    fi
  elif [[ $(command -v swupd) ]]; then # ClearLinux
    sudo swupd update
  fi
  # Serpent OS
}

update_dotfiles() {
  log "Dotfiles update"
  list=("$@")

  for repo_name in "${list[@]}"; do
    cd $XDG_CONFIG_HOME/${repo_name}
    echo -e "\t$PWD\n\tChecking if ${repo_name} is up-to-date, otherwise pulling updates."
    git pull
  done
}

update_fisher() {
  log "Fisher update"
  FISHER_INSTALLED_VERSION=$(fish -c 'fisher -v' | cut -d' ' -f3)
  FISHER_REMOTE_VERSION=$(curl -s https://api.github.com/repos/jorgebucaran/fisher/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")' | cut -c1-)

  if [ $(version $FISHER_INSTALLED_VERSION) -lt $(version $FISHER_REMOTE_VERSION) ]; then
    echo -e "Updating fisher to ${FISHER_REMOTE_VERSION}"
  else
    echo "Installed version (${FISHER_INSTALLED_VERSION}) is up to date (remote is ${FISHER_REMOTE_VERSION})"
  fi
  #TODO: fix this
  fish -c "fisher update"
}

update_fonts() {
  log "Fonts update"
  echo -e "\n--- to be implemented yet\n"
}

update_flatpak() {
  log "Flatpak update"
  flatpak update
}

update_kitty() {
  log "Kitty update"
  
  INSTALLED_VERSION=$(kitty -v 2>&1 | cut -d ' ' -f2)
  REMOTE_VERSION=`curl -s https://api.github.com/repos/kovidgoyal/kitty/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")' | cut -c2-`
  if [ $(version $INSTALLED_VERSION) -lt $(version $REMOTE_VERSION) ]; then
    echo -e "Updating Kitty to ${REMOTE_VERSION}"
    curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
  else
    echo "Installed version (${INSTALLED_VERSION}) is up to date (remote is ${REMOTE_VERSION})"
  fi
}

update_nix() {
  log "Nix update. This can take a while ☕🛋️💤"

  #TODO: temp fix
  nix-channel --update
  nix-env -u &>/dev/null
  log "Nix packages updated! 🥳🎉"

  #FIX: no useful output?
  # if [[ $(nix-channel --update 2>&1) =~ "switching from generation" ]]
  # then
    #https://nix.dev/manual/nix/2.22/command-ref/nix-channel
    # nix-channel --update

    #https://nix.dev/manual/nix/2.22/command-ref/nix-env/upgrade
    # nix-env -u &>/dev/null
    #nix-channel --list-generations
    
    # log "Nix packages updated! 🥳🎉"
  # else
    # log "No Nix updates available."
  # fi
}

setup_vimix_themes() {
  log "Themes update"
  
  REMOTE_VERSION=`curl -s https://api.github.com/repos/vinceliuice/${1}/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")' | cut -c2-`
  INSTALLED_VERSION=$(cat $HOME/.themes/${1})
  if [ $(version $INSTALLED_VERSION) -lt $(version $REMOTE_VERSION) ]; then
    echo -e "Updating ${1} (current version ${INSTALLED_VERSION}) to ${REMOTE_VERSION}"
    cd /tmp/
    rm -Rf /tmp/${1}.zip 2>/dev/null
    rm -Rf /tmp/${1}-master/ 2>/dev/null
    wget https://github.com/vinceliuice/${1}/archive/master.zip -O ${1}.zip
    unzip /tmp/${1}.zip
    cd /tmp/${1}-master
    ./install.sh
    echo "${REMOTE_VERSION}" > $HOME/.themes/.${1}
  fi
}

update_themes() {
  setup_vimix_themes Vimix-gtk-themes
  setup_vimix_themes Vimix-icon-theme
}

execute() {
  # TODO: user choice
  update_distro
  update_dotfiles
  update_fisher
  update_flatpak
  update_fonts
  update_nix
  update_kitty
  #update_themes
}

execute

